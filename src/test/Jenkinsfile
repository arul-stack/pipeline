pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'myapp:latest'  // Define Docker image name
    }

    stages {
        stage('Checkout') {
            steps {
                // Pull the code from the GitHub repository
                git url: 'https://github.com/arul-stack/pipeline.git', branch: 'main'
            }
        }

        stage('Build') {
            steps {
                // Use Maven to clean and package the project
                sh 'mvn clean package'
            }
        }

        stage('Test') {
            steps {
                // Run the tests using Maven and JUnit
                sh 'mvn test'
            }
        }

        stage('Build Docker Image') {
            steps {
                // Build a Docker image from the Dockerfile
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Run Docker Container') {
            steps {
                // Run the Docker container from the image
                sh 'docker run -d -p 8080:8080 $DOCKER_IMAGE'
            }
        }
    }

    post {
        always {
            // Clean up the workspace after the build is finished
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
